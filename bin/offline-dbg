#!/bin/bash

set -eux

OVN_NAMESPACE=ovn-kubernetes
VAR_RUN=/tmp/offline-dbg/var-run

usage() {
    echo "Usage: $0 [OPTIONS] NODE"
    echo ""
    echo "NODE: The name of the k8s node to debug offline"
    echo ""
    echo "OPTIONS:"
    echo "  -h:     Print help"
    echo "  -o:     Openshift environment"
    echo ""
}

while getopts ":ho" opt; do
    case ${opt} in
        h)
            usage
            exit 0
            ;;
        o)
            OVN_NAMESPACE=openshift-ovn-kubernetes
            ;;
    esac
done

shift $(((OPTIND -1)))
if [ -z $1 ]; then
    usage
    exit 1
fi
NODE=$1

if [ !kubectl get node $NODE ]; then
    echo "Node not found"
    exit 1
fi

ovnkube_node=$(kubectl get pods -n $OVN_NAMESPACE --field-selector spec.nodeName=$NODE -o name | head -1 | sed "s/^.\{4\}//")

bridges=$(kubectl exec -n $OVN_NAMESPACE $ovnkube_node -- ovs-vsctl -- --real list-br)
kubectl exec -it -n $OVN_NAMESPACE $ovnkube_node -- sh -c "/usr/share/openvswitch/scripts/ovs-save save-flows $(echo $bridges | xargs) > /tmp/restore.sh"
kubectl cp -n $OVN_NAMESPACE $ovnkube_node:/tmp/restore.sh /tmp/restore.sh

# find where the logs have been saved and copy it locally
save_dir=$(cat /tmp/restore.sh | awk '/replace/{print $6; exit}' | xargs dirname)

kubectl cp -n $OVN_NAMESPACE $ovnkube_node:$save_dir $save_dir
mv /tmp/restore.sh $save_dir

# get the DB backup
mkdir -p $VAR_RUN
kubectl exec -i -n $OVN_NAMESPACE $ovnkube_node ovsdb-client backup > /tmp/db.conf

# run ovsdb-server
docker kill ovsdb-server || true
docker run -d -p 127.0.0.1:6640:6640/tcp -v /tmp/db.conf:/usr/local/var/run/openvswitch/db.backup -v ${VAR_RUN}:/usr/local/var/run/openvswitch/  --name ovsdb-server --rm ovsdb-server

# run ovs-vswitchd
docker kill ovs-vswitchd || true
docker run -d -p 127.0.0.1:16640:6640/tcp -e RESTORE_DIR=$save_dir -v $save_dir:$save_dir -v ${VAR_RUN}:/usr/local/var/run/openvswitch/ --name ovs-vswitchd --rm ovs-vswitchd

vswitchd_ctl=$(ls -x $VAR_RUN/ovs-vswitchd.*.ctl)

echo "Execute offline ofproto traces with the following --target=$vswitchd_ctl "
